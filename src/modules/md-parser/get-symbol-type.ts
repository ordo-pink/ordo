import { Switch } from "or-else";

import { SymbolType } from "@modules/md-parser/enums";

export const getSymbolType = (char: string) =>
	Switch.of(char)
		.case("*", SymbolType.STAR)
		.case("~", SymbolType.TILDE)
		.case("_", SymbolType.UNDERSCORE)
		.case("-", SymbolType.HYPHEN)
		.case("<", SymbolType.CHEVRON_LEFT)
		.case(">", SymbolType.CHEVRON_RIGHT)
		.case("@", SymbolType.AT)
		.case(".", SymbolType.DOT)
		.case(",", SymbolType.COMMA)
		.case("`", SymbolType.BACKTICK)
		.case("#", SymbolType.HASH)
		.case(" ", SymbolType.WHITESPACE)
		.case("/", SymbolType.SLASH)
		.case("\\", SymbolType.BACKSLASH)
		.case("|", SymbolType.PIPE)
		.case("(", SymbolType.BRACE_OPEN)
		.case(")", SymbolType.BRACE_CLOSE)
		.case("{", SymbolType.CURLY_BRACE_OPEN)
		.case("}", SymbolType.CURLY_BRACE_CLOSE)
		.case("[", SymbolType.BRACKET_OPEN)
		.case("]", SymbolType.BRACKET_CLOSE)
		.case("!", SymbolType.EXCLAMATION_MARK)
		.case("?", SymbolType.QUESTION_MARK)
		.case(":", SymbolType.COLON)
		.case(";", SymbolType.SEMICOLON)
		.case("'", SymbolType.SINGLE_QUOTE)
		.case('"', SymbolType.DOUBLE_QUOTE)
		.case("+", SymbolType.PLUS)
		.case("$", SymbolType.DOLLAR_SIGN)
		.case("%", SymbolType.PERCENT)
		.case("&", SymbolType.AMPERSAND)
		.case("^", SymbolType.CARET)
		.case("\n", SymbolType.EOL)
		.case("\t", SymbolType.TAB)
		.case((c) => !Number.isNaN(Number(c)), SymbolType.OCTET)
		.default(SymbolType.CHAR);
